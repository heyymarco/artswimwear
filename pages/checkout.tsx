import Head from 'next/head'
// import { Inter } from 'next/font/google'
// import styles from '@/styles/Home.module.scss'
import { Main } from '@/components/sections/Main'
import { Busy, ButtonIcon, Carousel, Check, DropdownListButton, EmailInput, ListItem, Nav, NavItem, TelInput, TextInput } from '@reusable-ui/components'
import { dynamicStyleSheets } from '@cssfn/cssfn-react'
import { useGetPriceListQuery, useGetProductDetailQuery, useGetProductListQuery } from '@/store/features/api/apiSlice'
import { formatCurrency } from '@/libs/formatters'
import ImageWithFallback from '@/components/ImageWithFallback'
import Link from 'next/link'
import { useRouter } from 'next/router'
import { Section } from '@/components/sections/Section'
import ReactMarkdown from 'react-markdown'
import { useState } from 'react'
import { addToCart, selectCartItems } from '@/store/features/cart/cartSlice'
import { useDispatch, useSelector } from 'react-redux'
import QuantityInput from '@/components/QuantityInput'
import { ValidationProvider } from '@reusable-ui/core'



// const inter = Inter({ subsets: ['latin'] })
const useCheckoutStyleSheet = dynamicStyleSheets(
    () => import(/* webpackPrefetch: true */'@/styles/checkout')
, { id: 'checkout' });



export default function Checkout() {
    const styles = useCheckoutStyleSheet();
    const cartItems   = useSelector(selectCartItems);
    const hasCart = !!cartItems.length;
    const dispatch = useDispatch();
    const {data: priceList, isLoading: isLoading1, isError: isError1} = useGetPriceListQuery();
    const {data: productList, isLoading: isLoading2, isError: isError2} = useGetProductListQuery();
    const isLoading = isLoading1 || isLoading2;
    const isError = isError1 || isError2;
    const isCartDataReady = hasCart && !!priceList && !!productList;
    
    
    
    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
            </Head>
            <Main nude={true}>
                {!hasCart && <Section className={styles.loading} theme='secondary'>
                    {
                        isLoading
                        ? <Busy theme='primary' size='lg' />
                        : (isError)
                        ? <p>Oops, an error occured!</p>
                        : <>
                            <p>
                                Your shopping cart is empty. Please add one/some products to buy.
                            </p>
                            <ButtonIcon icon='image_search' theme='primary' size='lg' gradient={true}>
                                <Link href='/products'>
                                    See our product gallery
                                </Link>
                            </ButtonIcon>
                        </>
                    }
                </Section>}
                
                {hasCart && <Section className={styles.expressCheckout} theme='secondary' title='Express Checkout'>
                </Section>}
                
                {hasCart && <Section className={styles.regularCheckout} theme='secondary' title='Regular Checkout'>
                    <ValidationProvider enableValidation={true}>
                        <Section className='contact' title='Contact Information'>
                            <EmailInput name='email'     placeholder='Email'      required autoComplete='shipping email' />
                            <Check name='marketing_opt_in' defaultActive={true}>Email me with news and offers</Check>
                        </Section>
                        <Section className='shipping' title='Shipping Address'>
                            <DropdownListButton buttonChildren='Country/Region'>
                                <ListItem>United States</ListItem>
                                <ListItem>Indonesia</ListItem>
                            </DropdownListButton>
                            
                            <TextInput  className='firstName' placeholder='First Name' required autoComplete='shipping given-name' />
                            <TextInput  className='lastName'  placeholder='Last Name'  required autoComplete='shipping family-name' />
                            <TelInput   className='phone'     placeholder='Phone'      required autoComplete='shipping tel' />
                            <TextInput  className='address'   placeholder='Address'    required autoComplete='shipping street-address' />
                            <TextInput  className='city'      placeholder='City'       required autoComplete='shipping address-level2' />
                            <TextInput  className='zone'      placeholder='State'      required autoComplete='shipping address-level1' />
                            <TextInput  className='zip'       placeholder='ZIP Code'   required autoComplete='shipping postal-code' />
                            
                            <input type='text' className='hidden' required autoComplete='shipping country' />
                        </Section>
                    </ValidationProvider>
                </Section>}
                
                {hasCart && <Section tag='nav' className={styles.navCheckout} theme='secondary'>
                    <ButtonIcon className='back' icon='arrow_back' theme='primary' size='md' buttonStyle='link'>
                        <Link href='/cart'>
                            Return to cart
                        </Link>
                    </ButtonIcon>
                    <ButtonIcon className='next' icon='arrow_forward' theme='primary' size='lg' iconPosition='end'>
                        Continue to shipping
                    </ButtonIcon>
                </Section>}
            </Main>
        </>
    )
}
